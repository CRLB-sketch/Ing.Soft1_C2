[{"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\index.js":"1","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\reportWebVitals.js":"2","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\App.js":"3","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Search.js":"4","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Main.js":"5","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Login.js":"6","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Emergency.js":"7","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Popup.js":"8","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Register.js":"9","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\HeaderComponent.js":"10","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\CardComponent.js":"11","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\MapComponent.js":"12","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\InputComponent.js":"13","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\functions\\GetVets.js":"14"},{"size":666,"mtime":1653950576050,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1652165322760,"results":"17","hashOfConfig":"16"},{"size":1002,"mtime":1653950576042,"results":"18","hashOfConfig":"16"},{"size":13409,"mtime":1654277015625,"results":"19","hashOfConfig":"16"},{"size":1825,"mtime":1654268976432,"results":"20","hashOfConfig":"16"},{"size":5113,"mtime":1653950576054,"results":"21","hashOfConfig":"16"},{"size":4592,"mtime":1654442877035,"results":"22","hashOfConfig":"16"},{"size":3159,"mtime":1654261497326,"results":"23","hashOfConfig":"16"},{"size":4940,"mtime":1653950576057,"results":"24","hashOfConfig":"16"},{"size":1506,"mtime":1653950576066,"results":"25","hashOfConfig":"16"},{"size":854,"mtime":1653950576066,"results":"26","hashOfConfig":"16"},{"size":1566,"mtime":1653950576067,"results":"27","hashOfConfig":"16"},{"size":847,"mtime":1653950576066,"results":"28","hashOfConfig":"16"},{"size":509,"mtime":1653950576068,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1j9ww4s",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"33"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"33"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\index.js",[],[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\reportWebVitals.js",[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\App.js",[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Search.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],[],"/**#######################################################################################\r\n * Universidad del Valle de Guatemala\r\n * Departamento de Ciencias de la Computación\r\n * Ingeniería de Software 1 - Sección 10\r\n * \r\n * Me Pet & Me\r\n * ! Search: Para buscar las veterinarias que el usuario solicita\r\n * \r\n * Integrantes:\r\n * Cristian Laynez\r\n * Elean Rivas\r\n * Sara Paguaga\r\n * Diego Ruiz\r\n * Javier Alvarez\r\n #######################################################################################*/\r\n\r\nimport React, { useState, useEffect, Component, useMemo } from 'react'\r\n// import OptionComponent from './components/OptionComponent'\r\nimport CardComponent from './components/CardComponent'\r\nimport Popup from './Popup'\r\nimport '../styles/search.css'\r\n\r\nimport {\r\n    Heading,\r\n    Button,\r\n    Input,\r\n    FormControl,\r\n    Select,\r\n    Slider,\r\n    RangeSlider,\r\n    RangeSliderFilledTrack,\r\n    RangeSliderTrack,\r\n    RangeSliderThumb,\r\n    SliderTrack,\r\n    SliderFilledTrack,\r\n    SliderThumb,\r\n    Box,\r\n    SliderMark,\r\n    RangeSliderMark,\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure,\r\n    ModalFooter,\r\n} from '@chakra-ui/react'\r\n\r\nfunction Search() {\r\n    const [posts, setPosts] = useState([])\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [selectedVet, setSelectedVet] = useState({})\r\n    const [seePopup, setSeePopup] = useState(false)\r\n\r\n    const [value, setValue] = useState('')\r\n    const handleChange = (event) => setValue(event.target.value)\r\n\r\n    useEffect(() => {\r\n        getVets()\r\n    }, [])\r\n\r\n    const styles = {\r\n        modalBtn: {\r\n            width: '110px',\r\n            height: '40px',\r\n            borderRadius: '10px',\r\n            padding: '3px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            fontSize: '17px',\r\n        },\r\n    }\r\n\r\n    const getVets = () => {\r\n        fetch('http://127.0.0.1:8000/start_search', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                emergency: true,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setPosts(data)\r\n            })\r\n    }\r\n\r\n    const updateData = (the_emergency, the_vet, selected_service, the_time) => {\r\n        // alert('PROBAR TIEMPO: [' + the_time + '] - ' + the_time.length)\r\n        fetch('http://127.0.0.1:8000/apply_changues', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                emergency: the_emergency,\r\n                vet_type: the_vet,\r\n                selected_service: selected_service,\r\n                time: the_time,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log('VERIFICAR: ' + data)\r\n                setPosts(data)\r\n            })\r\n    }\r\n\r\n    const searchVets = () => {\r\n        alert('BUSCAR: ' + value)\r\n    }\r\n\r\n    class FilterFrom extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                emerg: true,\r\n                kind: 'Nada',\r\n                services: '',\r\n                the_time: '',\r\n            }\r\n            this.handleChange = this.handleChange.bind(this)\r\n            this.applyFilters = this.applyFilters.bind(this)\r\n        }\r\n\r\n        handleChange(event) {\r\n            this.setState({ [event.target.name]: event.target.value })\r\n        }\r\n\r\n        applyFilters(event) {\r\n            updateData(\r\n                this.state.emerg,\r\n                this.state.kind,\r\n                this.state.services,\r\n                this.state.the_time\r\n            )\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <>\r\n                    <form>\r\n                        <div className=\"SearchOuterContainer2\">\r\n                            <FormControl>\r\n                                <label>Emergencia</label>\r\n                                <Select\r\n                                    focusBorderColor={'rgb(174 213 142)'}\r\n                                    name=\"emerg\"\r\n                                    value={this.state.emerg}\r\n                                    onChange={this.handleChange}\r\n                                >\r\n                                    <option\r\n                                        value=\"true\"\r\n                                        onClick={() =>\r\n                                            console.log('PRUEBA TRUE')\r\n                                        }\r\n                                    >\r\n                                        {'Si'}\r\n                                    </option>\r\n                                    <option\r\n                                        value=\"false\"\r\n                                        onClick={() =>\r\n                                            console.log('PRUEBA FALSE')\r\n                                        }\r\n                                    >\r\n                                        {'No'}\r\n                                    </option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"SearchOuterContainer2\">\r\n                            <FormControl>\r\n                                <label>Hora Disponibilidad</label>\r\n                                <br />\r\n                                <input\r\n                                    type=\"time\"\r\n                                    name=\"the_time\"\r\n                                    value={this.state.the_time}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"SearchOuterContainer2\">\r\n                            <FormControl>\r\n                                <label>Tipo Veterinaria</label>\r\n                                <Select\r\n                                    focusBorderColor={'rgb(174 213 142)'}\r\n                                    value={this.state.kind}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"kind\"\r\n                                >\r\n                                    <option value=\"Nada\">{'Cualquiera'}</option>\r\n                                    <option value=\"Normal\">{'Normal'}</option>\r\n                                    <option value=\"Petshop\">{'Petshop'}</option>\r\n                                    <option value=\"Clinica\">{'Clinica'}</option>\r\n                                    <option value=\"Hospital\">\r\n                                        {'Hospital'}\r\n                                    </option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className=\"SearchOuterContainer2\">\r\n                            <FormControl>\r\n                                <label>Servicios</label>\r\n                                <Select\r\n                                    focusBorderColor={'rgb(174 213 142)'}\r\n                                    value={this.state.services}\r\n                                    onChange={this.handleChange}\r\n                                    name=\"services\"\r\n                                >\r\n                                    <option value=\"\">{'Cualquiera'}</option>\r\n                                    <option value=\"Rayos X\">{'Rayos X'}</option>\r\n                                    <option value=\"Hospedaje\">\r\n                                        {'Hospedaje'}\r\n                                    </option>\r\n                                    <option value=\"Groominge\">\r\n                                        {'Groominge'}\r\n                                    </option>\r\n                                    <option value=\"Vacunacion\">\r\n                                        {'Vacunacion'}\r\n                                    </option>\r\n                                    <option value=\"Desparacitacion\">\r\n                                        {'Desparacitacion'}\r\n                                    </option>\r\n                                    <option value=\"Castraciones\">\r\n                                        {'Castraciones'}\r\n                                    </option>\r\n                                    <option value=\"Operacion\">\r\n                                        {'Operacion'}\r\n                                    </option>\r\n                                    <option value=\"Emergencias\">\r\n                                        {'Emergencias'}\r\n                                    </option>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <Button\r\n                            color=\"white\"\r\n                            background={'orange'}\r\n                            onClick={() => this.applyFilters()}\r\n                        >\r\n                            Aplicar filtros\r\n                        </Button>\r\n                    </form>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const SeeSearch = () => {\r\n        return (\r\n            <div className=\"SearchBackgorund\">\r\n                <div className=\"SearchOuterContainer container\">\r\n                    <div className=\"SearchInfoContainer\">\r\n                        <div className=\"titleContainer\">\r\n                            <Heading className=\"title\">Filtros</Heading>\r\n                        </div>\r\n\r\n                        <FilterFrom />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"SearchOuterContainer3 container\">\r\n                    <div className=\"SearchInfoContainer\">\r\n                        <div className=\"titleContainer\">\r\n                            <Heading className=\"title\">\r\n                                Búsqueda de veterinarias\r\n                            </Heading>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"SearchGridContainer\">\r\n                        <Input\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            focusBorderColor=\"rgb(174 213 142)\"\r\n                            placeholder=\"Ingrese su búsqueda\"\r\n                        />\r\n                        <Button\r\n                            className=\"buttonS\"\r\n                            backgroundColor=\"#ea9a64\"\r\n                            _hover=\"rgb(174 213 142)\"\r\n                            _active={{\r\n                                bg: 'rgb(174 213 142)',\r\n                                borderColor: 'rgb(174, 213, 142)',\r\n                            }}\r\n                            color=\"#fff\"\r\n                            grid-column=\"8\"\r\n                            onClick={searchVets}\r\n                        >\r\n                            {' '}\r\n                            &#x1F50D;{' '}\r\n                        </Button>\r\n\r\n                        <div className=\"modalBtnDiv\">\r\n                            <Button\r\n                                className=\"modalBtn\"\r\n                                style={styles.modalBtn}\r\n                                onClick={onOpen}\r\n                            >\r\n                                Filtros\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Modal isOpen={isOpen} onClose={onClose}>\r\n                            <ModalContent>\r\n                                <div className=\"modalForm\">\r\n                                    <ModalHeader>Filtros</ModalHeader>\r\n                                    <ModalCloseButton />\r\n                                    <ModalBody>\r\n                                        <FilterFrom />\r\n                                    </ModalBody>\r\n                                </div>\r\n                            </ModalContent>\r\n                        </Modal>\r\n                    </div>\r\n\r\n                    <div className=\"CardsContainer\">\r\n                        {posts.map((vet) => {\r\n                            return (\r\n                                <div>\r\n                                    <CardComponent\r\n                                        vet={vet}\r\n                                        image=\"https://pbs.twimg.com/media/EWH0kEZWsAAWwvI.jpg\"\r\n                                        setSeePopup={setSeePopup}\r\n                                        setSelectedVet={setSelectedVet}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!seePopup && <SeeSearch />}\r\n            {seePopup && (\r\n                <Popup vet={selectedVet} regretOriginal={setSeePopup} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Main.js",[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Login.js",["94"],[],"import React, { useState } from 'react'\r\nimport InputComponent from './components/InputComponent'\r\nimport { Heading, Button } from '@chakra-ui/react'\r\nimport '../styles/register.css'\r\n\r\nconst Login = () => {\r\n    const [correo, setCorreo] = useState('')\r\n    const [contra1, setContra1] = useState('')\r\n\r\n    const getCorreo = (correo) => {\r\n        setCorreo(correo)\r\n    }\r\n    const getContra = (contra) => {\r\n        setContra1(contra)\r\n    }\r\n\r\n    const handleVerify = (email, password) => {\r\n        fetch('http://127.0.0.1:8000/verify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    console.log(result.exist)\r\n                    console.log(result.data)\r\n                    if (result.exist === 0) {\r\n                        alert('USuario o contraseña no valido')\r\n                        console.log('yes')\r\n                    } else {\r\n                        alert('Bienvenido')\r\n                        console.log('no')\r\n                    }\r\n                } else {\r\n                    alert('Error con la solicitud')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Ocurrio un error inesperado: ' + error)\r\n            })\r\n    }\r\n\r\n    const handleVerifyVet = (email, password) => {\r\n        fetch('http://127.0.0.1:8000/verify_vet', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    console.log(result.exist)\r\n                    console.log(result.data)\r\n                    if (result.exist === 0) {\r\n                        //alert(\"USuario o contraseña no valido\")\r\n                        console.log('yes1')\r\n                    } else {\r\n                        //alert(\"Bienvenido\")\r\n                        console.log('no1')\r\n                    }\r\n                } else {\r\n                    alert('Error con la solicitud')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Ocurrio un error inesperado: ' + error)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        handleVerify(correo, contra1)\r\n        /*handleVerifyVet(correo, contra1);\r\n\r\n        if(handleVerify.exist === 0 && handleVerifyVet.exist === 0){\r\n            alert(\"USuario o contraseña no valido\")\r\n        }else if (handleVerify.exist === 0 && handleVerifyVet.exist != 0){\r\n            alert('bienvenido Vet: ' + correo )\r\n        }else if(handleVerifyVet.exist === 0 && handleVerify.exist != 0){\r\n            alert('bienvenido User: ' + correo )\r\n        }*/\r\n    }\r\n\r\n    return (\r\n        <div className=\"provisionalBackgorund\">\r\n            <div className=\"outerContainer container\">\r\n                <div className=\"infoContainer\">\r\n                    <div className=\"titleContainer\">\r\n                        <Heading className=\"title\">Iniciar Sesión</Heading>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <InputComponent\r\n                            getter={getCorreo}\r\n                            title=\"Correo\"\r\n                            message=\"Ingresa tu correo\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getContra}\r\n                            title=\"Contraseña\"\r\n                            message=\"Ingresa tu contraseña\"\r\n                        />\r\n                        <Button\r\n                            backgroundColor=\"#ea9a64\"\r\n                            _hover=\"rgb(174 213 142)\"\r\n                            _active={{\r\n                                bg: 'rgb(174 213 142)',\r\n                                borderColor: 'rgb(174, 213, 142)',\r\n                            }}\r\n                            color=\"#fff\"\r\n                            type=\"submit\"\r\n                            width=\"100%\"\r\n                            marginTop=\"10px\"\r\n                        >\r\n                            Aceptar\r\n                        </Button>\r\n                    </form>\r\n                    <p className=\"questionCont\">\r\n                        ¿No tienes cuenta?{' '}\r\n                        <a href=\"/register\">\r\n                            <b className=\"highlight\">¡Registrate!</b>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <div className=\"innerContainer\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Emergency.js",["95"],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Popup.js",[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\Register.js",["96","97"],[],"import React, { useState } from 'react'\r\nimport InputComponent from './components/InputComponent'\r\nimport { Heading, Button } from '@chakra-ui/react'\r\nimport '../styles/register.css'\r\n\r\nlet user_type = 'vet'\r\n\r\nconst Register = () => {\r\n    const [nombre, setNombre] = useState('')\r\n    const [apellido, setApellido] = useState('')\r\n    const [user, setUser] = useState('')\r\n    const [correo, setCorreo] = useState('')\r\n    const [contra1, setContra1] = useState('')\r\n    const [contra2, setContra2] = useState('')\r\n\r\n    const handleAddUser = (user_name, email, password, type_user) => {\r\n        fetch('http://127.0.0.1:8000/add_user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                user_name: user_name,\r\n                correo: email,\r\n                password: password,\r\n                type_user: type_user,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                if (result.success) {\r\n                    alert('Se agrego el user')\r\n                } else {\r\n                    alert('Error con la solicitud')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert('Ocurrio un error inesperado: ' + error)\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (contra1 === contra2) {\r\n            handleAddUser(user, correo, contra1, user_type)\r\n        } else {\r\n            alert('no coinciden las contraseñas, vuelva a intentarlo')\r\n        }\r\n    }\r\n\r\n    const getNombre = (name) => {\r\n        setNombre(name)\r\n    }\r\n\r\n    const getApellido = (apellido) => {\r\n        setApellido(apellido)\r\n    }\r\n    const getUser = (user) => {\r\n        setUser(user)\r\n    }\r\n    const getCorreo = (correo) => {\r\n        setCorreo(correo)\r\n    }\r\n    const getContra = (contra) => {\r\n        setContra1(contra)\r\n    }\r\n    const getContras = (contras) => {\r\n        setContra2(contras)\r\n    }\r\n\r\n    return (\r\n        <div className=\"provisionalBackgorund\">\r\n            <div className=\"outerContainer container\">\r\n                <div className=\"infoContainer\">\r\n                    <div className=\"titleContainer\">\r\n                        <Heading className=\"title\">Registro</Heading>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <InputComponent\r\n                            getter={getNombre}\r\n                            title=\"Nombre\"\r\n                            message=\"Ingresa tu nombre\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getApellido}\r\n                            title=\"Apellidos\"\r\n                            message=\"Ingresa tus apellidos\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getUser}\r\n                            title=\"Nombre de usuario\"\r\n                            message=\"Ingresa tu nombre de usuario\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getCorreo}\r\n                            title=\"Correo\"\r\n                            message=\"Ingresa tu correo\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getContra}\r\n                            title=\"Contraseña\"\r\n                            message=\"Ingresa tu contraseña\"\r\n                        />\r\n                        <InputComponent\r\n                            getter={getContras}\r\n                            title=\"Cofirmar contraseña\"\r\n                            message=\"Confirma tu contraseña\"\r\n                        />\r\n                        <Button\r\n                            backgroundColor=\"#ea9a64\"\r\n                            _hover=\"rgb(174 213 142)\"\r\n                            _active={{\r\n                                bg: 'rgb(174 213 142)',\r\n                                borderColor: 'rgb(174, 213, 142)',\r\n                            }}\r\n                            color=\"#fff\"\r\n                            type=\"submit\"\r\n                            width=\"100%\"\r\n                            marginTop=\"10px\"\r\n                        >\r\n                            Aceptar\r\n                        </Button>\r\n                    </form>\r\n\r\n                    <p className=\"questionCont\">\r\n                        ¿Ya tienes cuenta?{' '}\r\n                        <a href=\"./Login\">\r\n                            {' '}\r\n                            <b className=\"highlight\">Iniciar sesión</b>\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"innerContainer\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\HeaderComponent.js",["98"],[],"/**#######################################################################################\r\n * Universidad del Valle de Guatemala\r\n * Departamento de Ciencias de la Computación\r\n * Ingeniería de Software 1 - Sección 10\r\n * \r\n * Me Pet & Me\r\n * ! Emergency: Mostrar mapa y solicitar que se atienda a la mascota\r\n * \r\n * Integrantes:\r\n * Cristian Laynez\r\n * Elean Rivas\r\n * Sara Paguaga\r\n * Diego Ruiz\r\n * Javier Alvarez\r\n #######################################################################################*/\r\n\r\n// import '../styles/index.css'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nfunction HeaderComponent({ setCurrentPage }) {\r\n    return (\r\n        <>\r\n            <nav className=\"header\">\r\n                <Link to={'/'}>\r\n                    {' '}\r\n                    <h1 className=\"logo\">\r\n                        <b>My Pet&Me</b>\r\n                    </h1>{' '}\r\n                </Link>\r\n\r\n                <ul className=\"header-right\">\r\n                    <li className=\"option active btn\">\r\n                        <Link to={'/emergency'}>Emergencia</Link>\r\n                    </li>\r\n\r\n                    <li className=\"option btn\">\r\n                        <Link to={'/search'}>Búsqueda</Link>\r\n                    </li>\r\n\r\n                    <li className=\"option btn\">\r\n                        <Link to={'/login'}>Iniciar sesión</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\CardComponent.js",["99"],[],"import React from 'react'\r\nimport { Image, Stack } from '@chakra-ui/react'\r\nimport '../../styles/search.css'\r\n\r\nconst CardComponent = ({ vet, image, setSeePopup, setSelectedVet }) => {\r\n    const handleClick = () => {\r\n        setSeePopup(true)\r\n        setSelectedVet(vet)\r\n    }\r\n\r\n    return (\r\n        <div className=\"CardCont\" onClick={handleClick}>\r\n            <Stack align=\"center\">\r\n                <Image\r\n                    className=\"imgS\"\r\n                    borderRadius=\"10px\"\r\n                    boxSize=\"150px\"\r\n                    objectFit=\"cover\"\r\n                    src={image}\r\n                    alt=\"Foto Veterinaria\"\r\n                />\r\n                <a className=\"nombresS\">\r\n                    <b>{vet['name']}</b>\r\n                </a>\r\n            </Stack>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardComponent\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\MapComponent.js",["100"],[],"import React, { useState } from 'react'\r\n\r\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet'\r\nimport { Icon } from 'leaflet'\r\n\r\nconst icon = new Icon({\r\n    iconUrl: '/icons8-marker-a-48.png',\r\n    iconSize: [48, 48],\r\n})\r\n\r\nconst centerPosition = [14.6050635, -90.4893286]\r\n\r\nconst MapComponent = ({ vets, setSelectedVet }) => {\r\n    const AddVet = ({ vet }) => {\r\n        const positions = [vet['long'], vet['lat']]\r\n\r\n        const handle = () => {\r\n            setSelectedVet(vet)\r\n        }\r\n\r\n        return (\r\n            <div onClick={handle}>\r\n                <Marker position={positions} icon={icon}>\r\n                    <Popup>\r\n                        {vet['name']} <br />{' '}\r\n                        <button onClick={handle} className=\"btn-marker\">\r\n                            VER MAS\r\n                        </button>\r\n                    </Popup>\r\n                </Marker>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MapContainer\r\n                center={centerPosition}\r\n                zoom={13}\r\n                scrollWheelZoom={false}\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {vets.map((vet) => (\r\n                    <AddVet vet={vet} />\r\n                ))}\r\n            </MapContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MapComponent\r\n","C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\components\\InputComponent.js",[],[],"C:\\Users\\sarap\\OneDrive\\Documents\\UVG\\year 3\\5to. Semestre\\Ingeniería del Software\\Cortes - Ing. de Software 1\\Corte 4\\Ing.Soft1_MyPet-Me\\src\\pages\\functions\\GetVets.js",[],[],{"ruleId":"101","severity":1,"message":"102","line":17,"column":38,"nodeType":"103","messageId":"104","endLine":17,"endColumn":47},{"ruleId":"101","severity":1,"message":"105","line":17,"column":49,"nodeType":"103","messageId":"104","endLine":17,"endColumn":56},{"ruleId":"101","severity":1,"message":"106","line":29,"column":5,"nodeType":"103","messageId":"104","endLine":29,"endColumn":11},{"ruleId":"101","severity":1,"message":"107","line":30,"column":5,"nodeType":"103","messageId":"104","endLine":30,"endColumn":16},{"ruleId":"101","severity":1,"message":"108","line":31,"column":5,"nodeType":"103","messageId":"104","endLine":31,"endColumn":27},{"ruleId":"101","severity":1,"message":"109","line":32,"column":5,"nodeType":"103","messageId":"104","endLine":32,"endColumn":21},{"ruleId":"101","severity":1,"message":"110","line":33,"column":5,"nodeType":"103","messageId":"104","endLine":33,"endColumn":21},{"ruleId":"101","severity":1,"message":"111","line":34,"column":5,"nodeType":"103","messageId":"104","endLine":34,"endColumn":16},{"ruleId":"101","severity":1,"message":"112","line":35,"column":5,"nodeType":"103","messageId":"104","endLine":35,"endColumn":22},{"ruleId":"101","severity":1,"message":"113","line":36,"column":5,"nodeType":"103","messageId":"104","endLine":36,"endColumn":16},{"ruleId":"101","severity":1,"message":"114","line":37,"column":5,"nodeType":"103","messageId":"104","endLine":37,"endColumn":8},{"ruleId":"101","severity":1,"message":"115","line":38,"column":5,"nodeType":"103","messageId":"104","endLine":38,"endColumn":15},{"ruleId":"101","severity":1,"message":"116","line":39,"column":5,"nodeType":"103","messageId":"104","endLine":39,"endColumn":20},{"ruleId":"101","severity":1,"message":"117","line":41,"column":5,"nodeType":"103","messageId":"104","endLine":41,"endColumn":17},{"ruleId":"101","severity":1,"message":"118","line":47,"column":5,"nodeType":"103","messageId":"104","endLine":47,"endColumn":16},{"ruleId":"101","severity":1,"message":"119","line":49,"column":11,"nodeType":"103","messageId":"104","endLine":49,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":48,"column":22,"nodeType":"122","messageId":"123","endLine":48,"endColumn":24},{"ruleId":"101","severity":1,"message":"124","line":9,"column":12,"nodeType":"103","messageId":"104","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"125","line":10,"column":12,"nodeType":"103","messageId":"104","endLine":10,"endColumn":20},{"ruleId":"101","severity":1,"message":"126","line":18,"column":16,"nodeType":"103","messageId":"104","endLine":18,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":22,"column":17,"nodeType":"129","endLine":22,"endColumn":41},{"ruleId":"101","severity":1,"message":"130","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'Slider' is defined but never used.","'RangeSlider' is defined but never used.","'RangeSliderFilledTrack' is defined but never used.","'RangeSliderTrack' is defined but never used.","'RangeSliderThumb' is defined but never used.","'SliderTrack' is defined but never used.","'SliderFilledTrack' is defined but never used.","'SliderThumb' is defined but never used.","'Box' is defined but never used.","'SliderMark' is defined but never used.","'RangeSliderMark' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalFooter' is defined but never used.","'handleVerifyVet' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'nombre' is assigned a value but never used.","'apellido' is assigned a value but never used.","'useNavigate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used."]